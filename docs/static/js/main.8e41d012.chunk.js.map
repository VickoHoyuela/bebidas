{"version":3,"sources":["context/CategoriasContext.jsx","context/RecetasContext.jsx","components/Formulario.jsx","components/Header.jsx","context/ModalContext.jsx","components/Receta.jsx","components/ListaRecetas.jsx","App.js","serviceWorker.js","index.js"],"names":["CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","resultado","obtenerRecetas","Formulario","guardarBusqueda","useContext","obtenerDatosReceta","e","target","name","onSubmit","preventDefault","className","type","placeholder","onChange","map","key","strCategory","Header","ModalContext","ModalProvider","idreceta","guardarIdReceta","info","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","console","log","push","mostrarIngredientes","ListaRecetas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8e41d012.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\n//Crear context\r\n\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider es donde se encuentran las funciones y state\r\n\r\nconst CategoriasProvider = (props) => {\r\n  // crear state del context\r\n  const [categorias, guardarCategorias] = useState([])\r\n\r\n  // ejecutar el llamado a la API\r\n  useEffect(() => {\r\n    const obtenerCategorias = async () => {\r\n      const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\r\n      const categorias = await axios.get(url);\r\n\r\n      guardarCategorias(categorias.data.drinks);\r\n    }\r\n    obtenerCategorias()\r\n  }, [])\r\n\r\n  return (\r\n    <CategoriasContext.Provider\r\n      value={{ categorias }}\r\n    >\r\n      {props.children}\r\n    </CategoriasContext.Provider>\r\n\r\n  )\r\n}\r\n\r\nexport default CategoriasProvider;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { createContext, useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n\r\n  const [recetas, guardarRecetas] = useState([]);\r\n\r\n  const [busqueda, buscarRecetas] = useState({\r\n    nombre: '',\r\n    categoria: ''\r\n  })\r\n\r\n  const [consultar, guardarConsultar] = useState(false);\r\n  const { nombre, categoria } = busqueda;\r\n\r\n  useEffect(() => {\r\n    if (consultar) {\r\n      const obtenerRecetas = async () => {\r\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\r\n        const resultado = await axios.get(url)\r\n\r\n        // console.log(resultado.data.drinks);\r\n        guardarRecetas(resultado.data.drinks)\r\n      }\r\n      obtenerRecetas();\r\n    }\r\n  }, [busqueda])\r\n\r\n  return (\r\n    <RecetasContext.Provider\r\n      value={{ buscarRecetas, guardarConsultar, recetas }}\r\n    >\r\n      {props.children}\r\n    </RecetasContext.Provider>\r\n  );\r\n}\r\n\r\nexport default RecetasProvider;","import React, { useContext, useState } from 'react'\r\nimport { CategoriasContext } from '../context/CategoriasContext'\r\nimport { RecetasContext } from '../context/RecetasContext'\r\n\r\nconst Formulario = () => {\r\n\r\n  const [busqueda, guardarBusqueda] = useState({\r\n    nombre: '',\r\n    categoria: ''\r\n  });\r\n\r\n  const { categorias } = useContext(CategoriasContext)\r\n  const { buscarRecetas, guardarConsultar } = useContext(RecetasContext)\r\n\r\n  //función para leer los contenidos\r\n  const obtenerDatosReceta = e => {\r\n    guardarBusqueda({\r\n      ...busqueda,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  return (\r\n    <form onSubmit={e => {\r\n      e.preventDefault()\r\n      buscarRecetas(busqueda)\r\n      guardarConsultar(true)\r\n    }} className=\"col-12\">\r\n      <fieldset className=\"text-center\">\r\n        <legend>Busca bebidas por categoría o ingrediente</legend>\r\n      </fieldset>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por ingredientes\"\r\n            onChange={obtenerDatosReceta}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <select name=\"categoria\" className=\"form-control\" onChange={obtenerDatosReceta}>\r\n            <option value=\"\">--- Selecciona categoría ---</option>\r\n            {\r\n              categorias.map(categoria => (\r\n                <option\r\n                  key={categoria.strCategory}\r\n                  value={categoria.strCategory}\r\n                >{categoria.strCategory}</option>\r\n              ))\r\n            }\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <input type=\"submit\" value=\"Buscar bebidas\" className=\"btn btn-block btn-primary\" />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Formulario\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-alert\">\r\n      <h1>Busca receta de bebidas</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect, createContext } from 'react'\r\nimport axios from 'axios';\r\n\r\n//Crear context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n\r\n  //state Provider\r\n  const [idreceta, guardarIdReceta] = useState(null)\r\n  const [info, guardarReceta] = useState({})\r\n \r\n  // Una vez que tenemos una receta, llamar a la API\r\n\r\n  useEffect(() => {\r\n    const obtenerReceta = async () => {\r\n      if (!idreceta) return;\r\n\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`;\r\n      const resultado = await axios.get(url)\r\n      guardarReceta(resultado.data.drinks[0])\r\n    }\r\n    obtenerReceta()\r\n  }, [idreceta])\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        info,\r\n        guardarIdReceta,\r\n        guardarReceta\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ModalProvider;","import React, { useContext, useState } from 'react'\r\nimport { ModalContext } from '../context/ModalContext'\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 450,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Receta = ({ receta }) => {\r\n  // Configuración del modal de material-ui\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  //extraer los valores del context\r\n  const { info, guardarIdReceta, guardarReceta } = useContext(ModalContext)\r\n\r\n  // Muestra y formatea los ingredientes\r\n  const mostrarIngredientes = info => {\r\n    let ingredientes = [];\r\n\r\n    for (let i = 1; i < 16; i++) {\r\n      console.log(\"Dentro FOR\")\r\n      if (info[`strIngredient${i}`]) {\r\n        ingredientes.push(\r\n          <li key={i}>{info[`strIngredient${i}`]} {info[`strMeasure${i}`]}</li>\r\n        )\r\n      }\r\n    }\r\n    return ingredientes;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-card-header\">\r\n          {receta.strDrink}\r\n        </h2>\r\n        <img className=\"card-img-top\" src={receta.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`} />\r\n        <div className=\"card-body\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={() => {\r\n              guardarIdReceta(receta.idDrink);\r\n              handleOpen();\r\n            }}\r\n          >\r\n            Ver receta\r\n          </button>\r\n\r\n          <Modal open={open} onClose={() => {\r\n            guardarIdReceta(null);\r\n            guardarReceta({});\r\n            handleClose();\r\n          }}>\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <h2>{info.strDrink}</h2>\r\n              <h3 className=\"mt-4\">Instrucciones</h3>\r\n              <p>\r\n                {info.strInstructions}\r\n              </p>\r\n\r\n              <img src={info.strDrinkThumb} alt={info.strDrink} className=\"img-fluid my-4\" />\r\n\r\n              <h3>Ingredientes y cantidades</h3>\r\n              <ul>\r\n                {mostrarIngredientes(info)}\r\n              </ul>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Receta\r\n","import React, {useContext} from 'react'\r\nimport { RecetasContext } from '../context/RecetasContext'\r\nimport Receta from './Receta';\r\n\r\nconst ListaRecetas = () => {\r\n  // Extraer las recetas\r\n  const { recetas } = useContext(RecetasContext)\r\n  \r\n  return (\r\n    <div className=\"row mt-5\">\r\n      {recetas.map(receta => (\r\n        <Receta \r\n          key={receta.idDrink}\r\n          receta={receta}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListaRecetas\r\n","import React from \"react\";\nimport Formulario from \"./components/Formulario.jsx\";\nimport Header from \"./components/Header.jsx\";\nimport Listado from \"./components/ListaRecetas.jsx\";\nimport CategoriasProvider from \"./context/CategoriasContext\";\nimport RecetasProvider from \"./context/RecetasContext\";\nimport ModalProvider from \"./context/ModalContext\";\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Header />\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Formulario />\n              <Listado />\n            </div>\n          </div>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}